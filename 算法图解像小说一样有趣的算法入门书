1、排序
（1）冒泡
（2）快速：可以选用递归的方式
（3）选择，例子就是按照播放最多排序
2、散列表，例子是通过朋友，朋友的朋友。。。找一个人
广度优先搜索算法步骤：通过判断朋友是不是，是则结束，不是则把朋友的朋友压入堆栈（可以对检查完的人做标记）
3、狄克斯特拉，如果有负权边（贝尔曼-福特算法），就不能使用狄克斯特拉算法。
关键理念：找出图中最便宜的节点，并确保没有到该节点的更便宜的路径！
给路径分配权重，找到最低或者最高的路径，带权重的图称为加权图。
绕环的路径不可能是最短的路径。
例子，换钢琴。
步骤：（1）创建开销表
（2）找到花费最少路径，新增到开销表
（3）找到根节点的其他节点为起点，看下终点有没有和最短路径终点重合，如果重合就更新开销表，最短路径
代码实现：
（1）创建三个表graph（所有节点间的花费）、cost（起点到每个节点的花费）和parents(节点和该节点的父节点)
4、贪心算法：就是你每步都选择局部最优解，最终得到的就是全局最优解
5、NP问题，情况有太多种选一个最短的，只能选个近似最短的，通过每次选还没选过的当中最短的
6、动态规划，背包问题，用个表格讲解更清晰
7、K最临近
KNN用于分类和回归，需要考虑最近的邻居。
 分类就是编组。
 回归就是预测结果（如数字）。
 特征抽取意味着将物品（如水果或用户）转换为一系列可比较的数字。
 能否挑选合适的特征事关KNN算法的成败。
8、二叉查找树，比数组二叉查找慢，但是插入和删除更好
数据库：B树，红黑树，堆，伸展树
反向索引：页面包含单词，建单词、页面散列表；搜索单词定位到页面
9、傅里叶变换
